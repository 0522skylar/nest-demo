<!DOCTYPE html>
<html lang="ZH_cn">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>压缩字体包</title>
    <link rel="stylesheet" href="/css/index.css">
</head>

<body>
    <div class="mask" style="display: block;">
        <div class="progress-9"></div>
    </div>
    <h1>压缩字体包</h1>
    
    <div class="setup">
        <p>本页面包含的功能：</p>
        <p>1.上传更换字体资源</p>
        <form id="uploadInitFont" enctype="multipart/form-data" method="post">
            <input type="file" name="file" id="initfile" oninput="initFontRes()"/>
            <div class="fileUpload" id="seleinit" onclick="document.getElementById('initfile').click()">
                上传字体资源（ttf,woff,woff2）
            </div>
        </form>
        <p class="bottomdash"></p>
        <p>2.下载页面上所有字的字体资源 （上一步上传的为何种格式，现在下载为何种格式）</p>
        <button class="btn">下载字体资源</button>
        <button class="defaultFont">下载页面默认字体资源（黑体）</button>

        <p class="bottomdash"></p>
        <p>3.根据上传的文件转换所需格式（说明： woff2格式比ttf格式的文件大小压缩了一半，）</p>

        <form id="upload" enctype="multipart/form-data" method="post">
            <input type="file" name="file" id="filettf" oninput="changeFontRes()"/>
            <div class="fileUpload" id="fileUpload" onclick="document.getElementById('filettf').click()">
                选择文件
            </div>
            <!-- form表单提交数据不让跳转办法,button标签会自动跳转 -->
        </form>
        <p class="bottomdash"></p>
        <button class="change conver">ttf转换woff2</button>
        <button class="change conver">ttf转换woff</button>
        <button class="change conver">ttf转换eot</button>
        <button class="change conver">otf转换ttf</button>

        <p class="bottomdash"></p>

        <p>4.如果页面上的字体资源不足，欢迎补充提交，然后你会在文字后面看到新增的文字，但是没有字体样式，请重新刷新页面，字体资源重新加载，就能下载最新的ttf文件和woff2文件了</p>
        <textarea class="writeBox" id="write"></textarea>
        <button class="change" onclick="addWord()">提交</button>

    </div>

    <div id="special" style="display: none;">﹟ `!^…！~ #﹩$﹠&﹪%*﹡﹢﹦﹤‐￣¯―﹨ˆ˜﹍﹎+=
        <＿_-\ˇ﹉﹊（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】1234567890@￥():"[]|? />
        ,.;'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZπ一二三四五六七八九十ⅠⅡⅢⅣⅤⅥⅦⅧⅨⅩⅪⅫ。，、﹑＇：∶‘’“”〝〞﹕︰﹔﹖·¨¸´？～—｜‖＂〃
    </div>
    <div class="box">
        <div class="left">
            <h3>有字体效果</h3>
            <p class="text" id="textFont">
            </p>
        </div>
        <div class="right">
            <h3>无字体效果</h3>
            <p class="usually" id="textUsually">

            </p>
        </div>
    </div>
    <script src="./js/axios.min.js"></script>
    <script>
        let fontname = 'heiti'; //HYZhengYuan-75S
        let fileType = 'ttf'; // woff2
        let uploadName = ''; // 上传名字
        // 动态加载字体资源, 页面首次加载字体资源创建元素
        async function activeFontSource(ttype) {
            let type = ttype || 'ttf';
            document.querySelector(".mask").style.display = 'block';
            const font = new FontFace(
                "op-design",
                "url(" + `./home/font-test?font=${fontname}&type=${type}` + ")"
            );
            await font.load();
            document.fonts.add(font);
            document.querySelector(".mask").style.display = 'none';
        } 
        
        // 获取页面文字
        function getWord() {
            const str = document.querySelector('#special').innerText;
            axios({
                method: 'post',
                url: "./home/send-word",
                data: {
                    text: str
                }
            }).then((res) => {
                document.getElementById('textFont').innerText = res.data.text
                document.getElementById('textUsually').innerText = res.data.text
                activeFontSource(fileType)
            }).catch((err) => {
                alert("网络连接失败,稍后重试", err);
            })
        }
        
        getWord()

        // 1.改变页面字体资源
        function initFontRes() {
            let dom = document.querySelector("#initfile");
            let val = dom.value;
            if(val.length != 0) {
                let form = document.getElementById('uploadInitFont'),
                formData = new FormData(form);
                axios.post('./admin/initFont', formData, {
                    'Content-type': 'multipart/form-data'
                }).then(res => {
                    fontname = res.data.fileName;
                    fileType = res.data.type;
                    alert(res.data.msg)
                    activeFontSource(fileType)
                }, err => {
                    alert("网络连接失败,稍后重试", err);
                })
            }
            else {
                alert('未选中文件')
            }
        }
        
        // 2.下载页面字体资源
        document.querySelector(".btn").onclick = () => {
            let a = document.createElement('a'); 
            a.download = fontname + '.' + fileType;
            a.href = './home/font-test?font=' + fontname +'&type='+fileType; 
            let event = new MouseEvent('click') 
            a.dispatchEvent(event); 
        }

         // 下载默认黑体
         document.querySelector(".defaultFont").onclick = () => {
            let a = document.createElement('a');
            a.download = 'heiti.ttf';
            a.href = './init/heiti.ttf';
            let event = new MouseEvent('click');
            a.dispatchEvent(event); 
        }
 
        // 3.根据上传文件转换不同字体格式
        function changeFontRes() {
            let dom = document.querySelector("#filettf");
            let val = dom.value;
            if(val.length != 0) {
                let form = document.getElementById('upload'),
                formData = new FormData(form);
                axios.post('./home/upload', formData, {
                    'Content-type': 'multipart/form-data'
                }).then(res => {
                    uploadName = res.data.fileName;
                    alert(res.data.msg)
                }, err => {
                    alert("网络连接失败,稍后重试", err);
                })
            }
            else {
                alert('未选中文件')
            }
        }
      
        let changeArr = document.querySelectorAll('.conver');
        
        changeArr[0].onclick = () => {
            if (uploadName.length != 0) {
                document.querySelector(".mask").style.display = 'block';
                axios({
                    method: 'get',
                    url: "./home/ttf-to-woff?name=" + uploadName,
                }).then((res) => {
                    console.log(res.data);
                    alert(res.data.msg)
                    let a = document.createElement('a'); // 创建一个a节点插入的document
                    a.download = res.data.url;
                    a.href = './woff2/' + res.data.url; // 将图片的src赋值给a节点的href
                    let event = new MouseEvent('click') // 模拟鼠标click点击事件
                    a.dispatchEvent(event); // 触发鼠标点击事件
                    document.querySelector(".mask").style.display = 'none';
                }).catch((err) => {
                    document.querySelector(".mask").style.display = 'none';
                    alert("网络连接失败,稍后重试", err);
                })
            } else {
                alert('未执行第三步上传文件')
            }
        }
        
        // ttf-to-woff
        changeArr[1].onclick = () => {
            if (uploadName.length != 0) {
                document.querySelector(".mask").style.display = 'block';
                axios({
                    method: 'get',
                    url: "./home/ttf-to-woffone?name=" + uploadName,
                }).then((res) => {
                    console.log(res.data);
                    alert(res.data.msg)
                    let a = document.createElement('a'); // 创建一个a节点插入的document
                    a.download = res.data.url;
                    a.href = './woff/' + res.data.url; // 将图片的src赋值给a节点的href
                    let event = new MouseEvent('click') // 模拟鼠标click点击事件
                    a.dispatchEvent(event); // 触发鼠标点击事件
                    document.querySelector(".mask").style.display = 'none';
                }).catch((err) => {
                    document.querySelector(".mask").style.display = 'none';
                    alert("网络连接失败,稍后重试", err);
                })
            } else {
                alert('未执行第三步上传文件')
            }
        }

        // /ttf-to-eot
        changeArr[2].onclick = () => {
            if (uploadName.length != 0) {
                document.querySelector(".mask").style.display = 'block';
                axios({
                    method: 'get',
                    url: "./home/ttf-to-eot?name=" + uploadName,
                }).then((res) => {
                    console.log(res.data);
                    alert(res.data.msg)
                    let a = document.createElement('a'); // 创建一个a节点插入的document
                    a.download = res.data.url;
                    a.href = './eot/' + res.data.url; // 将图片的src赋值给a节点的href
                    let event = new MouseEvent('click') // 模拟鼠标click点击事件
                    a.dispatchEvent(event); // 触发鼠标点击事件
                    document.querySelector(".mask").style.display = 'none';
                }).catch((err) => {
                    document.querySelector(".mask").style.display = 'none';
                    alert("网络连接失败,稍后重试", err);
                })
            } else {
                alert('未执行第三步上传文件')
            }
        }
        
        //otf-to-ttf
        changeArr[3].onclick = () => {
            if (uploadName.length != 0) {
                document.querySelector(".mask").style.display = 'block';
                axios({
                    method: 'get',
                    url: "./home/otf-to-ttf?name=" + uploadName,
                }).then((res) => {
                    console.log(res.data);
                    alert(res.data.msg)
                    let a = document.createElement('a'); // 创建一个a节点插入的document
                    a.download = res.data.url;
                    a.href = './ttf/' + res.data.url; // 将图片的src赋值给a节点的href
                    let event = new MouseEvent('click') // 模拟鼠标click点击事件
                    a.dispatchEvent(event); // 触发鼠标点击事件
                    document.querySelector(".mask").style.display = 'none';
                }).catch((err) => {
                    document.querySelector(".mask").style.display = 'none';
                    alert("网络连接失败,稍后重试", err);
                })
            } else {
                alert('未执行第三步上传文件')
            }
        }

        // 4.添加文字
        function addWord() {
            let addText = document.getElementById("write").value;
            let pageText = document.getElementById("textFont").innerText;
            let beforeLen = pageText.length;
            pageText = pageText + addText;
            let textArr = [...new Set(pageText.split(''))]
            if (textArr.length === beforeLen) {
                alert('这些字已经在页面上已存在了哦~~~')
                return;
            }
            console.log('addtext')
            axios({
                method: 'post',
                url: "./home/write-word",
                data: {
                    addtext: textArr.join('')
                }
            }).then((res) => {
                alert(res.data.msg)
                getWord()
            }).catch((err) => {
                console.log('error', err)
                alert("网络连接失败,稍后重试", err);
            })
        }
  
    </script>
</body>

</html>